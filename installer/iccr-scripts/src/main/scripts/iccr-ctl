#!/bin/sh

APPLICATION=iccr

[ -r /etc/java/java.conf ] && . /etc/java/java.conf
export JAVA_HOME

# Get from iccr.properties
export ICCR_DIR=/opt/iccr
export ICCR_CONF_DIR=${ICCR_DIR}/conf
export ICCR_CONF_FILE=${ICCR_CONF_DIR}/iccr.properties
export ICCR_LIB_DIR=${ICCR_DIR}/lib
export ICCR_LOG_DIR=${ICCR_DIR}/logs
export ICCR_TMP_DIR=${ICCR_DIR}/tmp
export ICCR_BIN_DIR=${ICCR_DIR}/bin
export ICCR_BAK_DIR=${ICCR_DIR}/bak
export ICCR_JAR_NAME=iccr.jar
export ICCR_PID_FILE=${ICCR_DIR}/iccr.pid
export WHAT_APP=ICCR
export JAR_CHUNK="${ICCR_LIB_DIR}/${ICCR_JAR_NAME}"
export PORTNUM_PROP=iccrPortNumber

cd $ICCR_DIR

# for start:
loglevel=
nossl=
preferIPv4Flag=
src_path="$( cd "$(dirname "$0")" ; pwd -P )"
cron="$src_path/bin/iccr-ctl $@"

for arg in "$@"; do
    if [ "${arg}" = "debug" ]; then
        loglevel=debug
    fi
    if [ "${arg}" = "info" ]; then
        loglevel=info
    fi
    if [ "${arg}" = "nossl" ]; then
        nossl="nossl"
    fi
    if [ "${arg}" = "ipv4" ]; then
        preferIPv4Flag="-Djava.net.preferIPv4Stack=true"
    fi
    if [ "${arg}" = "boot" ]; then
	echo "Creating cron job"
	crontab -l > "@reboot $cron"
    fi

done

stop() {
    echo Stopping $WHAT_APP

    if [ -f $ICCR_PID_FILE ]; then
        iccrPid=`cat $ICCR_PID_FILE`

        kill ${iccrPid}

        statusCode=$?

        rm -f $ICCR_PID_FILE

        return $statusCode
    else
        rval=`ps -fax | grep ${JAR_CHUNK} | grep -v grep  | cut -f1 -d' '`

        statusCode=$?

        if [ ! -z "${rval}" -a $statusCode -eq 0 ]; then
            echo "$WHAT_APP seemed to be alive, but PID file not found, killing PID $rval"
            kill $rval
            return $statusCode
        fi
    fi
    return 1
}

start() {
    echo Starting $WHAT_APP
    # Are we already running?
    if [ -f $ICCR_PID_FILE ]; then
        iccrPid=`cat $ICCR_PID_FILE`

        rval=`ps -fax | grep ${iccrPid} | grep -v grep`

        statusCode=$?

        if [ $statusCode -eq 0 ]; then
            echo "${WHAT_APP} is already alive, PID ${iccrPid}"
            return 0
        fi
    else
        rval=`ps -fax | grep ${JAR_CHUNK} | grep -v grep | cut -f1 -d' '`

        statusCode=$?

        if [ ! -z "${rval}" -a $statusCode -eq 0 ]; then
            echo "${WHAT_APP} is already alive, but no PID file (PID is $rval ?)"
            return 0
        fi
    fi

    iccrPortNumber=`grep $PORTNUM_PROP $ICCR_CONF_FILE | sed -e s/^iccrPortNumber=//g`

    echo using port $iccrPortNumber

    jvm_env="-DiccrDir=${ICCR_DIR}"
    if [ -z "${nossl}" ]; then
        jvm_env="${jvm_env} -Dswarm.https.port=${iccrPortNumber}"
    else
        jvm_env="${jvm_env} -Dswarm.http.port=${iccrPortNumber}"
    fi

    # Practice values:
    #jvm_env="${jvm_env} -Dswarm.http.port=${iccrPortNumber} -Dswarm.https.port=${iccrHttpsPortNumber}"
    #jvm_env="${jvm_env} -Djava.util.logging.manager=org.jboss.logmanager.LogManager"

    iccrargs="${nossl} ${loglevel}"

    # Practice:
    #ICCR_START_CMD="java ${jvm_env} -jar ${ICCR_LIB_DIR}/${ICCR_JAR_NAME}  ${iccrargs} "
    #ICCR_START_CMD="nohup java ${jvm_env} -jar ${ICCR_LIB_DIR}/${ICCR_JAR_NAME} ${iccrargs} > ${ICCR_LOG_DIR}/iccr.log 2>&1 &"

    # Practice:
    #echo
    #echo ${ICCR_START_CMD}
    #echo
    #${ICCR_START_CMD}

    # Practice:
    #java ${jvm_env} -jar ${ICCR_LIB_DIR}/${ICCR_JAR_NAME} ${iccrargs}
    #CP="-cp ${ICCR_LIB_DIR}"
    
    nohup java ${jvm_env} ${preferIPv4Flag} -jar ${ICCR_LIB_DIR}/${ICCR_JAR_NAME} ${iccrargs} > ${ICCR_LOG_DIR}/iccr.log 2>&1 &

    iccrPid=$!

    echo $iccrPid > ${ICCR_PID_FILE}

    echo PID $iccrPid

    return $statusCode
}

status() {
    if [ -f $ICCR_PID_FILE ]; then
        iccrPid=`cat $ICCR_PID_FILE`

        rval=`ps -fax | grep ${iccrPid} | grep -v grep`

        statusCode=$?

        if [ $statusCode -eq 0 ]; then
            echo "${WHAT_APP} is alive, PID ${iccrPid}"
        else
            echo "${WHAT_APP} is not alive, PID was ${iccrPid}"
        fi
    else
        rval=`ps -fax | grep ${JAR_CHUNK} | grep -v grep  | cut -f1 -d' '`

        statusCode=$?

        if [ ! -z "${rval}" -a $statusCode -eq 0 ]; then
            echo "${WHAT_APP} seems to be alive, but no PID file (PID $rval ?)"
        else
            echo "${WHAT_APP} is not alive"
        fi
    fi
    return $statusCode
}

restart() {
    sleep 1
    stop
    sleep 5
    start
}


# Stopping:
if [ "${1}" = "stop" ]; then
    stop
elif [ "${1}" = "status" ]; then
    status
elif [ "${1}" = "restart" ]; then
    restart
elif [ "${1}" = "start" ]; then
    start
else
    echo Unsupported or missing command, supported commands are: stop, start, restart, status
fi
# What else?!



